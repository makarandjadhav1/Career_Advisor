{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor\napi.interceptors.response.use(response => {\n  return response;\n}, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    // Token expired or invalid\n    localStorage.removeItem('token');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Auth API\nexport const authAPI = {\n  login: (email, password) => api.post('/auth/login', {\n    email,\n    password\n  }),\n  register: userData => api.post('/auth/register', userData),\n  getMe: () => api.get('/auth/me'),\n  forgotPassword: email => api.post('/auth/forgot-password', {\n    email\n  })\n};\n\n// Profile API\nexport const profileAPI = {\n  getProfile: () => api.get('/profile'),\n  updateProfile: data => api.put('/profile', data),\n  updateSkills: skills => api.post('/profile/skills', {\n    skills\n  }),\n  updateInterests: interests => api.post('/profile/interests', {\n    interests\n  }),\n  updateCareerGoals: goals => api.post('/profile/career-goals', goals),\n  updatePreferences: preferences => api.post('/profile/preferences', preferences),\n  deleteAccount: () => api.delete('/profile')\n};\n\n// Assessment API\nexport const assessmentAPI = {\n  getAvailable: () => api.get('/assessment/available'),\n  startAssessment: type => api.post('/assessment/start', {\n    type\n  }),\n  submitResponse: (assessmentId, questionId, answer) => api.post(`/assessment/${assessmentId}/response`, {\n    questionId,\n    answer\n  }),\n  completeAssessment: assessmentId => api.post(`/assessment/${assessmentId}/complete`),\n  getResults: assessmentId => api.get(`/assessment/${assessmentId}/results`),\n  getHistory: () => api.get('/assessment/history')\n};\n\n// Career API\nexport const careerAPI = {\n  getRecommendations: () => api.get('/career/recommendations'),\n  getCareerPaths: params => api.get('/career/paths', {\n    params\n  }),\n  getCareerPath: careerId => api.get(`/career/paths/${careerId}`),\n  searchCareerPaths: (query, params) => api.get('/career/search', {\n    params: {\n      q: query,\n      ...params\n    }\n  }),\n  getMarketInsights: (industry, location) => api.get('/career/market-insights', {\n    params: {\n      industry,\n      location\n    }\n  }),\n  compareCareers: careerIds => api.post('/career/compare', {\n    careerIds\n  }),\n  getLearningPath: careerId => api.get(`/career/paths/${careerId}/learning`),\n  getStats: () => api.get('/career/stats')\n};\n\n// Skills API\nexport const skillsAPI = {\n  getGapAnalysis: careerPath => api.get('/skills/gap-analysis', {\n    params: {\n      careerPath\n    }\n  }),\n  getLearningPath: data => api.post('/skills/learning-path', data),\n  getRecommendations: () => api.get('/skills/recommendations'),\n  updateProgress: (skillName, newLevel, evidence) => api.post('/skills/progress', {\n    skillName,\n    newLevel,\n    evidence\n  }),\n  getRoadmap: skillName => api.get(`/skills/roadmap/${skillName}`),\n  getTrending: (industry, timeframe) => api.get('/skills/trending', {\n    params: {\n      industry,\n      timeframe\n    }\n  }),\n  getAssessmentQuestions: skillName => api.get(`/skills/assessment/${skillName}`),\n  submitAssessment: (skillName, answers) => api.post(`/skills/assessment/${skillName}`, {\n    answers\n  })\n};\n\n// Health check\nexport const healthAPI = {\n  check: () => api.get('/health')\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","authAPI","login","email","password","post","register","userData","getMe","get","forgotPassword","profileAPI","getProfile","updateProfile","data","put","updateSkills","skills","updateInterests","interests","updateCareerGoals","goals","updatePreferences","preferences","deleteAccount","delete","assessmentAPI","getAvailable","startAssessment","type","submitResponse","assessmentId","questionId","answer","completeAssessment","getResults","getHistory","careerAPI","getRecommendations","getCareerPaths","params","getCareerPath","careerId","searchCareerPaths","query","q","getMarketInsights","industry","compareCareers","careerIds","getLearningPath","getStats","skillsAPI","getGapAnalysis","careerPath","updateProgress","skillName","newLevel","evidence","getRoadmap","getTrending","timeframe","getAssessmentQuestions","submitAssessment","answers","healthAPI","check"],"sources":["/home/mrrobot/Project/Blockchain/Personalized_carrier/client/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Request interceptor\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor\napi.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error) => {\n    if (error.response?.status === 401) {\n      // Token expired or invalid\n      localStorage.removeItem('token');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Auth API\nexport const authAPI = {\n  login: (email, password) => api.post('/auth/login', { email, password }),\n  register: (userData) => api.post('/auth/register', userData),\n  getMe: () => api.get('/auth/me'),\n  forgotPassword: (email) => api.post('/auth/forgot-password', { email }),\n};\n\n// Profile API\nexport const profileAPI = {\n  getProfile: () => api.get('/profile'),\n  updateProfile: (data) => api.put('/profile', data),\n  updateSkills: (skills) => api.post('/profile/skills', { skills }),\n  updateInterests: (interests) => api.post('/profile/interests', { interests }),\n  updateCareerGoals: (goals) => api.post('/profile/career-goals', goals),\n  updatePreferences: (preferences) => api.post('/profile/preferences', preferences),\n  deleteAccount: () => api.delete('/profile'),\n};\n\n// Assessment API\nexport const assessmentAPI = {\n  getAvailable: () => api.get('/assessment/available'),\n  startAssessment: (type) => api.post('/assessment/start', { type }),\n  submitResponse: (assessmentId, questionId, answer) => \n    api.post(`/assessment/${assessmentId}/response`, { questionId, answer }),\n  completeAssessment: (assessmentId) => \n    api.post(`/assessment/${assessmentId}/complete`),\n  getResults: (assessmentId) => \n    api.get(`/assessment/${assessmentId}/results`),\n  getHistory: () => api.get('/assessment/history'),\n};\n\n// Career API\nexport const careerAPI = {\n  getRecommendations: () => api.get('/career/recommendations'),\n  getCareerPaths: (params) => api.get('/career/paths', { params }),\n  getCareerPath: (careerId) => api.get(`/career/paths/${careerId}`),\n  searchCareerPaths: (query, params) => \n    api.get('/career/search', { params: { q: query, ...params } }),\n  getMarketInsights: (industry, location) => \n    api.get('/career/market-insights', { params: { industry, location } }),\n  compareCareers: (careerIds) => \n    api.post('/career/compare', { careerIds }),\n  getLearningPath: (careerId) => \n    api.get(`/career/paths/${careerId}/learning`),\n  getStats: () => api.get('/career/stats'),\n};\n\n// Skills API\nexport const skillsAPI = {\n  getGapAnalysis: (careerPath) => \n    api.get('/skills/gap-analysis', { params: { careerPath } }),\n  getLearningPath: (data) => api.post('/skills/learning-path', data),\n  getRecommendations: () => api.get('/skills/recommendations'),\n  updateProgress: (skillName, newLevel, evidence) => \n    api.post('/skills/progress', { skillName, newLevel, evidence }),\n  getRoadmap: (skillName) => api.get(`/skills/roadmap/${skillName}`),\n  getTrending: (industry, timeframe) => \n    api.get('/skills/trending', { params: { industry, timeframe } }),\n  getAssessmentQuestions: (skillName) => \n    api.get(`/skills/assessment/${skillName}`),\n  submitAssessment: (skillName, answers) => \n    api.post(`/skills/assessment/${skillName}`, { answers }),\n};\n\n// Health check\nexport const healthAPI = {\n  check: () => api.get('/health'),\n};\n\nexport default api;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}